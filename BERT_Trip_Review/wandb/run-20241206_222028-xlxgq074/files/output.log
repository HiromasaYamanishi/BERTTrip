  0%|                                                      | 0/377 [00:00<?, ?it/s]
call batch dict_keys(['input_ids', 'attention_mask', 'aug_input_ids', 'aug_attention_mask', 'labels', 'aug_labels'])
call batch dict_keys(['input_ids', 'attention_mask', 'aug_input_ids', 'aug_attention_mask', 'labels', 'aug_labels'])
forward inputs
inputids tensor([[   1,  478,  100,  125,   88,    0,   60,   80,    3,    2],
        [   1,  726,    4,    4,    0,   67,    0,    3,    2,    2],
        [   1, 1842,    4,    4,   60,    0,   71,    3,    2,    2],
        [   1,  942,  118,    4,   43,   30,   71,    0,   67,    3],
        [   1, 2118,   97,  125,   51,    0,   59,    3,    2,    2],
        [   1,  479,    4,  133,   71,    0,   59,    0,   78,    3],
        [   1, 1937,   95,   95,    0,    0,   45,   78,    3,    2],
        [   1,  896,    4,   95,   71,   68,    0,    6,   51,    3],
        [   1,  180,    4,    4,    0,   67,   91,    3,    2,    2],
        [   1, 1219,   97,   93,    0,    0,    0,    3,    2,    2],
        [   1, 2195,    4,    4,    0,    0,   60,    3,    2,    2],
        [   1,  923,    4,    4,    0,    0,   78,   44,    3,    2],
        [   1,  993,    4,    4,   14,    0,   66,    3,    2,    2],
        [   1,  763,    4,    4,   68,    0,   60,    0,   90,    3],
        [   1,  471,   97,  125,   68,   60,   72,    3,    2,    2],
        [   1,  715,    4,    4,   76,    0,   37,   15,    3,    2],
        [   1, 1771,    4,  111,   51,   81,    0,    3,    2,    2],
        [   1, 1675,  121,  125,   84,    0,   10,   65,    3,    2],
        [   1, 1438,    4,    4,    0,   91,    0,    0,   42,    3],
        [   1, 1981,    4,    4,   31,   20,    0,    3,    2,    2],
        [   1,  382,    4,    4,    0,   60,   42,    3,    2,    2],
        [   1, 1305,    4,    4,   80,   51,    0,   71,    3,    2],
        [   1, 2070,    4,    4,   82,    0,    0,   33,    3,    2],
        [   1, 1466,    4,    4,    0,   24,   10,    3,    2,    2],
        [   1,  730,    4,    4,    0,   60,    0,    0,    3,    2],
        [   1, 2253,    4,    4,   15,   37,   44,    3,    2,    2],
        [   1, 1094,    4,    4,    0,    0,   60,    7,    3,    2],
        [   1, 1691,    4,    4,   35,    0,    0,    0,    0,    3],
        [   1, 1217,    4,    4,   23,    7,   45,    3,    2,    2],
        [   1, 2090,  138,    4,    0,   46,   78,    3,    2,    2],
        [   1, 1891,    4,    4,    0,   60,   20,   90,    3,    2],
        [   1,  359,    4,    4,    0,   68,    0,    3,    2,    2]],
       device='cuda:0') labels tensor([[-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   60, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   43,   68, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   59,   78, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   68, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   52, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   68,   43,   72,   60, -100, -100],
        [-100, -100, -100, -100, -100, -100,   60,   71, -100, -100],
        [-100, -100, -100, -100, -100,   23, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   33, -100, -100],
        [-100, -100, -100, -100, -100, -100,   31, -100, -100, -100],
        [-100, -100, -100, -100, -100,   23, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   15, -100, -100],
        [-100, -100, -100, -100, -100, -100,    9, -100, -100, -100],
        [-100, -100, -100, -100, -100,   41,   10, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   88, -100, -100, -100],
        [-100, -100, -100, -100,   68, -100,   42, -100, -100, -100],
        [-100, -100, -100, -100, -100,   51, -100, -100, -100, -100],
        [-100, -100, -100, -100,   82,   14,   12, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   60,   72, -100, -100, -100],
        [-100, -100, -100, -100, -100,   37, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   68,    7, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   23, -100,   45, -100, -100, -100],
        [-100, -100, -100, -100, -100,   68, -100, -100,   78, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   80,   68,   71, -100, -100, -100]],
       device='cuda:0') tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0]], device='cuda:0') tensor([[   1,  478,   97,  125,   88,   60,   80,    3,    2,    2],
        [   1, 1742,    4,    4,   72,   67,   19,    3,    2,    2],
        [   1, 2048,    4,    4,    0,   67,   71,    3,    2,    2],
        [   1,  942,  118,    4,   25,    0,   71,   45,    3,    2],
        [   1, 1077,   97,  117,   51,   68,   71,    3,    2,    2],
        [   1,  479,  111,  129,   72,   32,    0,    3,    2,    2],
        [   1,  302,   95,  105,   16,   45,   78,    3,    2,    2],
        [   1, 2069,    4,  117,    0,   72,    6,    3,    2,    2],
        [   1, 1872,    4,    4,   14,   67,   91,    3,    2,    2],
        [   1,  237,   97,   95,   21,    0,    0,    0,   71,    3],
        [   1, 2040,    4,    4,   51,   23,    0,    0,    3,    2],
        [   1, 1839,    4,    4,   68,   23,   78,    3,    2,    2],
        [   1,  431,    4,    4,    7,   14,   71,   26,    3,    2],
        [   1, 1345,    4,    4,   51,   60,   31,   20,    3,    2],
        [   1, 2181,    4,  138,   51,    0,   60,    3,    2,    2],
        [   1, 2295,    4,    4,   76,   79,   37,    0,    3,    2],
        [   1,  735,    4,  111,   51,   45,   12,    3,    2,    2],
        [   1,  976,   97,  125,   84,   89,    0,   65,    3,    2],
        [   1, 1438,    4,    4,   67,   59,   42,    3,    2,    2],
        [   1, 2080,    4,    4,   31,   20,    0,    3,    2,    2],
        [   1,  967,    4,    4,    0,   60,    0,    3,    2,    2],
        [   1, 1305,    4,    4,   80,    0,   71,    3,    2,    2],
        [   1, 2070,    4,    4,    0,    0,    0,    3,    2,    2],
        [   1, 1466,    4,    4,   80,   53,   10,    3,    2,    2],
        [   1, 1451,    4,    4,   23,   49,   19,   71,    3,    2],
        [   1,  929,    4,    4,   15,    0,   44,    3,    2,    2],
        [   1, 1094,    4,    4,   35,    0,    0,    3,    2,    2],
        [   1, 1167,    4,    4,   35,   84,   22,    8,    3,    2],
        [   1, 1542,    4,    4,   77,   42,   45,    3,    2,    2],
        [   1, 2180,  129,    4,   80,    0,   23,   60,   72,    3],
        [   1,  141,    4,    4,   51,   68,   23,   60,   31,    3],
        [   1,  359,    4,    4,    0,    0,    0,    3,    2,    2]],
       device='cuda:0') tensor([[-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   60, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   43,   68, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   59,   78, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   68, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   52, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   68,   43,   72,   60, -100, -100],
        [-100, -100, -100, -100, -100, -100,   60,   71, -100, -100],
        [-100, -100, -100, -100, -100,   23, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   33, -100, -100],
        [-100, -100, -100, -100, -100, -100,   31, -100, -100, -100],
        [-100, -100, -100, -100, -100,   23, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   15, -100, -100],
        [-100, -100, -100, -100, -100, -100,    9, -100, -100, -100],
        [-100, -100, -100, -100, -100,   41,   10, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   88, -100, -100, -100],
        [-100, -100, -100, -100,   68, -100,   42, -100, -100, -100],
        [-100, -100, -100, -100, -100,   51, -100, -100, -100, -100],
        [-100, -100, -100, -100,   82,   14,   12, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   60,   72, -100, -100, -100],
        [-100, -100, -100, -100, -100,   37, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   68,    7, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   23, -100,   45, -100, -100, -100],
        [-100, -100, -100, -100, -100,   68, -100, -100,   78, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   80,   68,   71, -100, -100, -100]],
       device='cuda:0') tensor([[1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0]], device='cuda:0') None None None None None None None None None None None None None None None None None fine_tune
  warnings.warn(
Traceback (most recent call last):
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/run.py", line 113, in <module>
    m.train(m.config.pretrain_data, batch_size = batch_size, epochs = 1, save_model = False)
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/pretrain.py", line 146, in train
    self._fine_tune(
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/pretrain.py", line 215, in _fine_tune
    self.trip_trainer.train(dataset_file_path = dataset_file_path,
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/pretrain.py", line 70, in train
    trainer.train()
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/transformers/trainer.py", line 2123, in train
    return inner_training_loop(
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/transformers/trainer.py", line 2481, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs, num_items_in_batch)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/transformers/trainer.py", line 3579, in training_step
    loss = self.compute_loss(model, inputs, num_items_in_batch=num_items_in_batch)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/transformers/trainer.py", line 3633, in compute_loss
    outputs = model(**inputs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/bert/bert_review.py", line 203, in forward
    return self.forward_finetune(
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/bert/bert_review.py", line 314, in forward_finetune
    p1_context = self.predictor(z1_context)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1931, in __getattr__
    raise AttributeError(
AttributeError: 'ReviewTripBERT' object has no attribute 'predictor'
Traceback (most recent call last):
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/run.py", line 113, in <module>
    m.train(m.config.pretrain_data, batch_size = batch_size, epochs = 1, save_model = False)
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/pretrain.py", line 146, in train
    self._fine_tune(
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/pretrain.py", line 215, in _fine_tune
    self.trip_trainer.train(dataset_file_path = dataset_file_path,
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/pretrain.py", line 70, in train
    trainer.train()
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/transformers/trainer.py", line 2123, in train
    return inner_training_loop(
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/transformers/trainer.py", line 2481, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs, num_items_in_batch)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/transformers/trainer.py", line 3579, in training_step
    loss = self.compute_loss(model, inputs, num_items_in_batch=num_items_in_batch)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/transformers/trainer.py", line 3633, in compute_loss
    outputs = model(**inputs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/bert/bert_review.py", line 203, in forward
    return self.forward_finetune(
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/bert/bert_review.py", line 314, in forward_finetune
    p1_context = self.predictor(z1_context)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1931, in __getattr__
    raise AttributeError(
AttributeError: 'ReviewTripBERT' object has no attribute 'predictor'
