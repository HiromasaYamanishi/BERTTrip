  0%|                                                       | 0/48 [00:00<?, ?it/s]
inputidsinputids inputidsinputids inputids inputids inputids  inputids  tensor([[1.0000e+00, 8.2900e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         8.0000e+01, 1.4000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.0650e+03, 4.0000e+00, 4.0000e+00, 7.8000e+01, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 6.2700e+02, 1.1100e+02, 1.3300e+02, 0.0000e+00, 8.4000e+01,
         2.0000e+01, 9.0000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.6490e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 6.0000e+01,
         6.7000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.0510e+03, 4.0000e+00, 4.0000e+00, 4.0000e+01, 6.3000e+01,
         7.3000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.1680e+03, 4.0000e+00, 4.0000e+00, 2.3000e+01, 0.0000e+00,
         7.8000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.0190e+03, 4.0000e+00, 4.0000e+00, 3.1000e+01, 6.0000e+00,
         8.2000e+01, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.1830e+03, 4.0000e+00, 4.0000e+00, 3.1000e+01, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 9.1500e+02, 1.1500e+02, 9.2000e+01, 0.0000e+00, 2.4000e+01,
         1.0000e+00, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.0150e+03, 4.0000e+00, 4.0000e+00, 1.5000e+01, 0.0000e+00,
         3.6000e+01, 0.0000e+00, 0.0000e+00, 3.0000e+00],
        [1.0000e+00, 1.3540e+03, 4.0000e+00, 1.0800e+02, 0.0000e+00, 3.5000e+01,
         5.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.5290e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 3.5000e+01,
         1.1000e+01, 1.0000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 4.0600e+02, 4.0000e+00, 4.0000e+00, 4.0000e+01, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.2370e+03, 1.0400e+02, 9.5000e+01, 6.8000e+01, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.6960e+03, 4.0000e+00, 4.0000e+00, 7.9000e+01, 3.6000e+01,
         2.6000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 9.4800e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 7.0000e+01,
         1.2000e+01, 0.0000e+00, 0.0000e+00, 3.0000e+00],
        [1.0000e+00, 9.6900e+02, 4.0000e+00, 4.0000e+00, 4.1000e+01, 1.1000e+01,
         5.5000e+01, 2.2000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 7.6600e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 7.5000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.3630e+03, 4.0000e+00, 4.0000e+00, 9.2000e+01, 0.0000e+00,
         7.7000e+01, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.2490e+03, 4.0000e+00, 1.2900e+02, 5.1000e+01, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 8.9600e+02, 4.0000e+00, 4.0000e+00, 8.4000e+01, 3.5000e+01,
         7.5000e+01, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.8390e+03, 1.1900e+02, 4.0000e+00, 0.0000e+00, 6.0000e+00,
         0.0000e+00, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.3150e+03, 4.0000e+00, 4.0000e+00, 5.1000e+01, 0.0000e+00,
         0.0000e+00, 7.2000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.0810e+03, 4.0000e+00, 4.0000e+00, 3.6000e+01, 7.9000e+01,
         7.6000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 9.1000e+02, 9.7000e+01, 1.0300e+02, 0.0000e+00, 6.0000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.9200e+02, 1.2800e+02, 1.1800e+02, 0.0000e+00, 0.0000e+00,
         7.2000e+01, 0.0000e+00, 4.3000e+01, 3.0000e+00],
        [1.0000e+00, 2.2180e+03, 4.0000e+00, 4.0000e+00, 7.0000e+00, 7.8000e+01,
         1.2000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.6400e+03, 1.1600e+02, 9.9000e+01, 8.4000e+01, 4.1000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 3.8200e+02, 4.0000e+00, 9.9000e+01, 8.0000e+01, 8.8000e+01,
         7.7000e+01, 8.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 4.3500e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 9.1000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 6.6100e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 1.6000e+01,
         0.0000e+00, 3.0000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.1140e+03, 4.0000e+00, 4.0000e+00, 8.0000e+01, 0.0000e+00,
         4.9000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00]], device='cuda:1') labels tensor([[1.0000e+00, 8.4100e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         6.8000e+01, 6.2000e+01, 7.1000e+01, 3.0000e+00],
        [1.0000e+00, 2.7000e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 3.3000e+01,
         0.0000e+00, 1.4000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.8630e+03, 4.0000e+00, 4.0000e+00, 9.2000e+01, 0.0000e+00,
         0.0000e+00, 6.3000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.0260e+03, 1.0700e+02, 1.1900e+02, 0.0000e+00, 0.0000e+00,
         7.5000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.5200e+02, 4.0000e+00, 4.0000e+00, 3.1000e+01, 0.0000e+00,
         2.7000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 7.9300e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 2.3000e+01,
         6.0000e+01, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 4.4200e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 1.4000e+01,
         0.0000e+00, 3.3000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.3610e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.7870e+03, 4.0000e+00, 4.0000e+00, 6.0000e+01, 0.0000e+00,
         7.1000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.5100e+02, 1.0500e+02, 1.1300e+02, 6.8000e+01, 7.1000e+01,
         1.2000e+01, 3.8000e+01, 5.5000e+01, 3.0000e+00],
        [1.0000e+00, 9.9500e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 2.3000e+01,
         7.8000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.7000e+02, 4.0000e+00, 1.1100e+02, 0.0000e+00, 9.1000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.2870e+03, 9.5000e+01, 4.0000e+00, 4.2000e+01, 6.6000e+01,
         1.2000e+01, 3.3000e+01, 0.0000e+00, 3.0000e+00],
        [1.0000e+00, 6.9700e+02, 9.6000e+01, 1.3500e+02, 1.4000e+01, 0.0000e+00,
         6.3000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.9840e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 2.0000e+01,
         9.0000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 4.3200e+02, 4.0000e+00, 1.1700e+02, 7.9000e+01, 1.5000e+01,
         0.0000e+00, 3.6000e+01, 0.0000e+00, 3.0000e+00],
        [1.0000e+00, 9.3100e+02, 4.0000e+00, 9.7000e+01, 5.8000e+01, 0.0000e+00,
         0.0000e+00, 7.6000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.0990e+03, 4.0000e+00, 1.1100e+02, 0.0000e+00, 2.3000e+01,
         5.4000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.3960e+03, 4.0000e+00, 4.0000e+00, 2.3000e+01, 0.0000e+00,
         5.4000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.6600e+02, 9.3000e+01, 1.2000e+02, 5.1000e+01, 7.2000e+01,
         6.7000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.8050e+03, 4.0000e+00, 4.0000e+00, 6.8000e+01, 2.3000e+01,
         7.8000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 3.7400e+02, 1.3500e+02, 4.0000e+00, 1.0000e+01, 3.5000e+01,
         4.0000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.0610e+03, 9.5000e+01, 1.3500e+02, 8.0000e+01, 0.0000e+00,
         0.0000e+00, 7.1000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 3.7400e+02, 1.3300e+02, 4.0000e+00, 5.9000e+01, 0.0000e+00,
         1.7000e+01, 6.0000e+00, 2.3000e+01, 3.0000e+00],
        [1.0000e+00, 2.1740e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 2.3000e+01,
         6.0000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.9120e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         7.8000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.5900e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         2.3000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.4000e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 7.2000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.3300e+03, 9.2000e+01, 9.5000e+01, 0.0000e+00, 0.0000e+00,
         7.2000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.2770e+03, 4.0000e+00, 4.0000e+00, 8.0000e+01, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.2740e+03, 1.0200e+02, 4.0000e+00, 4.2000e+01, 6.6000e+01,
         0.0000e+00, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 4.9700e+02, 4.0000e+00, 4.0000e+00, 2.3000e+01, 4.4000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00]], device='cuda:2') labels tensor([[1.0000e+00, 4.7800e+02, 1.3300e+02, 1.2500e+02, 8.8000e+01, 0.0000e+00,
         6.0000e+01, 8.0000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 7.1300e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 6.7000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 4.7400e+02, 4.0000e+00, 4.0000e+00, 6.0000e+01, 0.0000e+00,
         7.1000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 9.4200e+02, 1.1800e+02, 4.0000e+00, 4.3000e+01, 0.0000e+00,
         4.5000e+01, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.4290e+03, 9.7000e+01, 1.2500e+02, 5.1000e+01, 0.0000e+00,
         7.1000e+01, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 4.7900e+02, 9.7000e+01, 1.3300e+02, 6.8000e+01, 0.0000e+00,
         5.9000e+01, 0.0000e+00, 2.3000e+01, 3.0000e+00],
        [1.0000e+00, 7.3200e+02, 9.5000e+01, 1.1900e+02, 0.0000e+00, 0.0000e+00,
         7.8000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.5810e+03, 4.0000e+00, 9.5000e+01, 7.1000e+01, 6.8000e+01,
         0.0000e+00, 0.0000e+00, 6.0000e+00, 3.0000e+00],
        [1.0000e+00, 6.6300e+02, 4.0000e+00, 4.0000e+00, 3.9000e+01, 5.2000e+01,
         6.7000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.5320e+03, 1.1100e+02, 1.1200e+02, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.3050e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         7.1000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.3900e+03, 4.0000e+00, 4.0000e+00, 2.5000e+01, 0.0000e+00,
         7.8000e+01, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.1340e+03, 4.0000e+00, 4.0000e+00, 6.0000e+01, 0.0000e+00,
         7.1000e+01, 3.3000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 7.6900e+02, 4.0000e+00, 4.0000e+00, 5.1000e+01, 0.0000e+00,
         2.3000e+01, 0.0000e+00, 3.1000e+01, 3.0000e+00],
        [1.0000e+00, 4.7100e+02, 4.0000e+00, 1.1700e+02, 5.1000e+01, 0.0000e+00,
         2.3000e+01, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.9070e+03, 4.0000e+00, 4.0000e+00, 7.6000e+01, 0.0000e+00,
         1.5000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.4110e+03, 4.0000e+00, 1.1100e+02, 5.1000e+01, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.2780e+03, 9.5000e+01, 1.2500e+02, 8.4000e+01, 0.0000e+00,
         1.0000e+01, 6.5000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.4380e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 6.7000e+01,
         5.9000e+01, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.0820e+03, 4.0000e+00, 4.0000e+00, 3.1000e+01, 2.0000e+01,
         8.8000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 9.8700e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 6.0000e+01,
         4.2000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.3050e+03, 4.0000e+00, 4.0000e+00, 5.1000e+01, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.0700e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 3.3000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.4660e+03, 4.0000e+00, 4.0000e+00, 1.4000e+01, 0.0000e+00,
         5.3000e+01, 1.0000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 6.0000e+02, 4.0000e+00, 4.0000e+00, 2.1000e+01, 6.0000e+01,
         0.0000e+00, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.9000e+02, 4.0000e+00, 4.0000e+00, 1.5000e+01, 3.7000e+01,
         4.4000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.0940e+03, 4.0000e+00, 4.0000e+00, 6.8000e+01, 0.0000e+00,
         7.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.7020e+03, 4.0000e+00, 4.0000e+00, 3.5000e+01, 0.0000e+00,
         2.5000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.6400e+03, 4.0000e+00, 4.0000e+00, 2.3000e+01, 4.2000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.1210e+03, 9.6000e+01, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         2.3000e+01, 0.0000e+00, 7.8000e+01, 3.0000e+00],
        [1.0000e+00, 1.8910e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 2.3000e+01,
         6.0000e+01, 3.1000e+01, 3.0000e+01, 3.0000e+00],
        [1.0000e+00, 3.5900e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 6.8000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00]], device='cuda:0') labels tensor([[1.0000e+00, 2.1310e+03, 4.0000e+00, 4.0000e+00, 5.1000e+01, 6.8000e+01,
         0.0000e+00, 7.1000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.1500e+02, 4.0000e+00, 4.0000e+00, 5.1000e+01, 6.8000e+01,
         0.0000e+00, 7.1000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 8.4100e+02, 4.0000e+00, 4.0000e+00, 6.7000e+01, 7.1000e+01,
         6.8000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.2110e+03, 4.0000e+00, 4.0000e+00, 6.8000e+01, 0.0000e+00,
         7.1000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.0630e+03, 9.7000e+01, 1.0500e+02, 0.0000e+00, 3.5000e+01,
         7.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 5.3200e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.1630e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 7.8000e+01,
         7.1000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.2790e+03, 4.0000e+00, 4.0000e+00, 1.4000e+01, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 9.9500e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.5560e+03, 1.1100e+02, 1.1600e+02, 0.0000e+00, 1.5000e+01,
         8.7000e+01, 4.8000e+01, 0.0000e+00, 3.0000e+00],
        [1.0000e+00, 2.1520e+03, 1.3300e+02, 1.3200e+02, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.1810e+03, 4.0000e+00, 1.1100e+02, 5.1000e+01, 6.8000e+01,
         6.0000e+01, 0.0000e+00, 7.1000e+01, 3.0000e+00],
        [1.0000e+00, 1.4190e+03, 4.0000e+00, 4.0000e+00, 7.2000e+01, 9.2000e+01,
         1.0000e+01, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 3.7200e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.1150e+03, 1.3300e+02, 9.9000e+01, 5.1000e+01, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 9.8100e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.1780e+03, 9.7000e+01, 1.2900e+02, 0.0000e+00, 5.7000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.0240e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 7.2000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.1480e+03, 9.7000e+01, 1.3700e+02, 5.1000e+01, 0.0000e+00,
         2.3000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.8380e+03, 4.0000e+00, 4.0000e+00, 2.3000e+01, 0.0000e+00,
         4.2000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.5020e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         6.0000e+00, 8.0000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.6690e+03, 9.7000e+01, 1.2500e+02, 8.7000e+01, 0.0000e+00,
         4.8000e+01, 6.9000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.0250e+03, 4.0000e+00, 4.0000e+00, 8.0000e+01, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.6160e+03, 4.0000e+00, 4.0000e+00, 5.1000e+01, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.4580e+03, 4.0000e+00, 1.1100e+02, 6.8000e+01, 7.1000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.7560e+03, 4.0000e+00, 4.0000e+00, 2.6000e+01, 0.0000e+00,
         6.9000e+01, 0.0000e+00, 0.0000e+00, 3.0000e+00],
        [1.0000e+00, 6.6200e+02, 1.0900e+02, 1.2100e+02, 8.0000e+01, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 3.2200e+02, 4.0000e+00, 4.0000e+00, 2.3000e+01, 0.0000e+00,
         7.2000e+01, 0.0000e+00, 0.0000e+00, 3.0000e+00],
        [1.0000e+00, 4.6400e+02, 4.0000e+00, 4.0000e+00, 8.0000e+01, 1.0000e+01,
         2.2000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.6910e+03, 4.0000e+00, 4.0000e+00, 4.6000e+01, 0.0000e+00,
         6.2000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.6910e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 5.1000e+01,
         2.3000e+01, 6.1000e+01, 7.1000e+01, 3.0000e+00],
        [1.0000e+00, 1.2400e+03, 9.2000e+01, 1.3500e+02, 6.8000e+01, 0.0000e+00,
         0.0000e+00, 7.1000e+01, 3.0000e+00, 2.0000e+00]], device='cuda:7') labels tensor([[1.0000e+00, 1.1760e+03, 4.0000e+00, 4.0000e+00, 2.1000e+01, 2.8000e+01,
         6.2000e+01, 8.8000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.0500e+02, 4.0000e+00, 4.0000e+00, 6.8000e+01, 2.3000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 7.5400e+02, 1.1700e+02, 1.1800e+02, 6.8000e+01, 2.3000e+01,
         6.0000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.3210e+03, 4.0000e+00, 1.1100e+02, 0.0000e+00, 6.8000e+01,
         6.0000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.1470e+03, 4.0000e+00, 4.0000e+00, 4.9000e+01, 4.6000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 3.0500e+02, 1.3500e+02, 4.0000e+00, 8.0000e+01, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.2090e+03, 1.3400e+02, 9.5000e+01, 0.0000e+00, 6.2000e+01,
         5.5000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 8.4400e+02, 4.0000e+00, 4.0000e+00, 7.2000e+01, 0.0000e+00,
         0.0000e+00, 5.9000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.9120e+03, 1.1900e+02, 1.3000e+02, 2.3000e+01, 7.9000e+01,
         3.1000e+01, 2.0000e+01, 0.0000e+00, 3.0000e+00],
        [1.0000e+00, 5.6600e+02, 9.5000e+01, 4.0000e+00, 3.7000e+01, 5.0000e+01,
         8.7000e+01, 7.9000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 8.6800e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         1.2000e+01, 8.0000e+00, 7.0000e+01, 3.0000e+00],
        [1.0000e+00, 1.4250e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.1620e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 5.4000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.8360e+03, 1.1900e+02, 1.3500e+02, 0.0000e+00, 2.3000e+01,
         7.1000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.3100e+03, 1.0100e+02, 9.7000e+01, 0.0000e+00, 0.0000e+00,
         6.9000e+01, 1.8000e+01, 3.6000e+01, 3.0000e+00],
        [1.0000e+00, 4.5900e+02, 1.2500e+02, 1.3500e+02, 0.0000e+00, 8.8000e+01,
         5.7000e+01, 0.0000e+00, 0.0000e+00, 3.0000e+00],
        [1.0000e+00, 2.1690e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         7.3000e+01, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 7.6400e+02, 4.0000e+00, 4.0000e+00, 8.0000e+01, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.2970e+03, 4.0000e+00, 4.0000e+00, 8.0000e+01, 6.8000e+01,
         7.8000e+01, 7.1000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.3880e+03, 4.0000e+00, 4.0000e+00, 8.8000e+01, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.1620e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 7.1000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.0170e+03, 4.0000e+00, 4.0000e+00, 6.8000e+01, 7.8000e+01,
         4.2000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 6.2400e+02, 1.3300e+02, 1.3500e+02, 8.0000e+01, 6.8000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 6.2200e+02, 4.0000e+00, 4.0000e+00, 7.9000e+01, 0.0000e+00,
         8.7000e+01, 4.8000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.0320e+03, 4.0000e+00, 4.0000e+00, 2.3000e+01, 0.0000e+00,
         3.2000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 8.0900e+02, 1.1700e+02, 1.0700e+02, 5.1000e+01, 5.7000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.0330e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 6.2300e+02, 1.3800e+02, 1.1000e+02, 0.0000e+00, 0.0000e+00,
         2.8000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.2060e+03, 4.0000e+00, 4.0000e+00, 6.4000e+01, 1.3000e+01,
         2.8000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.2840e+03, 4.0000e+00, 4.0000e+00, 7.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 8.5800e+02, 9.7000e+01, 1.2500e+02, 8.4000e+01, 3.5000e+01,
         1.1000e+01, 2.2000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.1380e+03, 1.3900e+02, 1.1600e+02, 0.0000e+00, 9.1000e+01,
         7.8000e+01, 2.3000e+01, 0.0000e+00, 3.0000e+00]], device='cuda:4') labels tensor([[1.0000e+00, 1.1200e+03, 9.7000e+01, 1.0500e+02, 5.1000e+01, 0.0000e+00,
         7.1000e+01, 5.9000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 6.6000e+02, 4.0000e+00, 1.1100e+02, 6.8000e+01, 7.1000e+01,
         6.0000e+00, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 3.9100e+02, 4.0000e+00, 4.0000e+00, 4.5000e+01, 0.0000e+00,
         0.0000e+00, 6.7000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.3810e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         9.0000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.0910e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 1.2000e+01,
         6.6000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.0920e+03, 4.0000e+00, 1.1100e+02, 2.3000e+01, 6.0000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 9.1900e+02, 1.3500e+02, 4.0000e+00, 6.8000e+01, 0.0000e+00,
         6.0000e+01, 0.0000e+00, 0.0000e+00, 3.0000e+00],
        [1.0000e+00, 8.8700e+02, 4.0000e+00, 4.0000e+00, 6.9000e+01, 0.0000e+00,
         2.6000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 3.0300e+02, 1.3300e+02, 1.3500e+02, 8.0000e+01, 0.0000e+00,
         6.7000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 4.6900e+02, 1.2300e+02, 1.2800e+02, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 9.1800e+02, 4.0000e+00, 4.0000e+00, 1.2000e+01, 7.0000e+00,
         7.5000e+01, 3.5000e+01, 1.3000e+01, 3.0000e+00],
        [1.0000e+00, 1.8210e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 8.8000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 9.3000e+02, 4.0000e+00, 4.0000e+00, 5.9000e+01, 0.0000e+00,
         7.1000e+01, 2.9000e+01, 0.0000e+00, 3.0000e+00],
        [1.0000e+00, 8.0500e+02, 4.0000e+00, 4.0000e+00, 2.3000e+01, 6.0000e+00,
         3.6000e+01, 4.2000e+01, 0.0000e+00, 3.0000e+00],
        [1.0000e+00, 1.0690e+03, 4.0000e+00, 4.0000e+00, 9.0000e+01, 2.3000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.8890e+03, 4.0000e+00, 4.0000e+00, 7.9000e+01, 8.7000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 9.7500e+02, 4.0000e+00, 4.0000e+00, 6.8000e+01, 4.2000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 7.8400e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         8.2000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 4.8100e+02, 4.0000e+00, 1.1800e+02, 5.1000e+01, 6.8000e+01,
         0.0000e+00, 6.0000e+01, 7.2000e+01, 3.0000e+00],
        [1.0000e+00, 1.0050e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 2.3000e+01,
         3.5000e+01, 4.3000e+01, 5.6000e+01, 3.0000e+00],
        [1.0000e+00, 1.6710e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 9.0000e+01,
         6.1000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 7.1600e+02, 1.1700e+02, 1.3500e+02, 7.9000e+01, 0.0000e+00,
         4.8000e+01, 6.9000e+01, 0.0000e+00, 3.0000e+00],
        [1.0000e+00, 1.0060e+03, 9.5000e+01, 4.0000e+00, 6.8000e+01, 2.3000e+01,
         1.7000e+01, 6.0000e+00, 4.3000e+01, 3.0000e+00],
        [1.0000e+00, 1.3010e+03, 1.2800e+02, 9.3000e+01, 0.0000e+00, 4.3000e+01,
         0.0000e+00, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.3840e+03, 1.3300e+02, 4.0000e+00, 3.1000e+01, 5.0000e+00,
         7.4000e+01, 4.9000e+01, 8.6000e+01, 3.0000e+00],
        [1.0000e+00, 1.6600e+03, 4.0000e+00, 4.0000e+00, 9.1000e+01, 0.0000e+00,
         0.0000e+00, 4.3000e+01, 7.2000e+01, 3.0000e+00],
        [1.0000e+00, 3.0100e+02, 4.0000e+00, 4.0000e+00, 4.1000e+01, 0.0000e+00,
         2.2000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 6.1400e+02, 1.0100e+02, 9.5000e+01, 7.2000e+01, 5.9000e+01,
         4.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 7.5000e+02, 4.0000e+00, 4.0000e+00, 1.1000e+01, 4.0000e+01,
         1.9000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 7.5700e+02, 4.0000e+00, 4.0000e+00, 8.7000e+01, 0.0000e+00,
         7.1000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.0050e+03, 9.2000e+01, 1.3500e+02, 6.4000e+01, 0.0000e+00,
         7.3000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 4.1800e+02, 1.3300e+02, 4.0000e+00, 8.4000e+01, 3.5000e+01,
         0.0000e+00, 0.0000e+00, 3.0000e+00, 2.0000e+00]], device='cuda:3') labels tensor([[1.0000e+00, 5.1400e+02, 1.1600e+02, 1.1800e+02, 6.8000e+01, 2.3000e+01,
         6.0000e+01, 7.1000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 6.7800e+02, 1.2700e+02, 1.3000e+02, 7.0000e+00, 6.8000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.2880e+03, 4.0000e+00, 4.0000e+00, 3.1000e+01, 2.0000e+01,
         7.3000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.1720e+03, 4.0000e+00, 4.0000e+00, 8.7000e+01, 6.7000e+01,
         7.1000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 9.0300e+02, 1.3500e+02, 4.0000e+00, 8.0000e+01, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 9.1000e+01, 3.0000e+00],
        [1.0000e+00, 1.9000e+03, 4.0000e+00, 1.2400e+02, 6.4000e+01, 5.7000e+01,
         6.3000e+01, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.2160e+03, 4.0000e+00, 4.0000e+00, 5.8000e+01, 0.0000e+00,
         4.1000e+01, 6.9000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 3.0000e+02, 4.0000e+00, 1.1000e+02, 8.0000e+01, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 9.2300e+02, 4.0000e+00, 4.0000e+00, 8.0000e+01, 4.9000e+01,
         5.6000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.2600e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 7.8000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.0140e+03, 4.0000e+00, 4.0000e+00, 7.9000e+01, 4.8000e+01,
         3.7000e+01, 2.6000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.9730e+03, 4.0000e+00, 4.0000e+00, 5.1000e+01, 6.6000e+01,
         5.2000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.8740e+03, 1.3300e+02, 1.2200e+02, 8.0000e+01, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.7040e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 2.3000e+01,
         6.0000e+01, 7.1000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.7360e+03, 9.7000e+01, 1.2500e+02, 8.0000e+01, 6.8000e+01,
         6.0000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.8240e+03, 9.7000e+01, 1.0700e+02, 5.9000e+01, 7.5000e+01,
         0.0000e+00, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.9350e+03, 9.5000e+01, 1.3500e+02, 4.3000e+01, 6.8000e+01,
         7.1000e+01, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.5400e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         2.7000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 9.1600e+02, 9.5000e+01, 4.0000e+00, 0.0000e+00, 6.6000e+01,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 3.0000e+00],
        [1.0000e+00, 1.2220e+03, 4.0000e+00, 4.0000e+00, 7.1000e+01, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.8160e+03, 4.0000e+00, 1.1100e+02, 5.1000e+01, 0.0000e+00,
         7.1000e+01, 0.0000e+00, 0.0000e+00, 3.0000e+00],
        [1.0000e+00, 9.9200e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 6.0000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.9740e+03, 9.7000e+01, 1.1300e+02, 0.0000e+00, 2.3000e+01,
         1.9000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.5700e+02, 1.0800e+02, 1.2500e+02, 5.1000e+01, 0.0000e+00,
         0.0000e+00, 5.9000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.9520e+03, 4.0000e+00, 4.0000e+00, 6.9000e+01, 1.8000e+01,
         3.6000e+01, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 3.6400e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 8.7000e+01,
         3.7000e+01, 0.0000e+00, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 6.5300e+02, 4.0000e+00, 4.0000e+00, 8.4000e+01, 4.1000e+01,
         1.1000e+01, 1.0000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 5.2600e+02, 4.0000e+00, 4.0000e+00, 6.8000e+01, 4.2000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 4.6600e+02, 9.6000e+01, 1.3300e+02, 8.0000e+01, 0.0000e+00,
         5.1000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 6.9600e+02, 4.0000e+00, 4.0000e+00, 5.2000e+01, 6.7000e+01,
         9.1000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 7.2800e+02, 1.1000e+02, 4.0000e+00, 8.4000e+01, 1.5000e+01,
         3.7000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.6960e+03, 4.0000e+00, 4.0000e+00, 6.8000e+01, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00]], device='cuda:5') labels tensor([[1.0000e+00, 3.5000e+02, 4.0000e+00, 1.1600e+02, 8.0000e+01, 4.3000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 4.5400e+02, 9.5000e+01, 4.0000e+00, 4.8000e+01, 6.9000e+01,
         2.6000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 3.6800e+02, 4.0000e+00, 4.0000e+00, 5.1000e+01, 0.0000e+00,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 6.9800e+02, 4.0000e+00, 4.0000e+00, 4.5000e+01, 7.1000e+01,
         7.8000e+01, 6.7000e+01, 0.0000e+00, 3.0000e+00],
        [1.0000e+00, 1.8880e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 2.3000e+01,
         1.6000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.2880e+03, 4.0000e+00, 4.0000e+00, 6.8000e+01, 1.4000e+01,
         1.2000e+01, 4.3000e+01, 2.4000e+01, 3.0000e+00],
        [1.0000e+00, 8.4100e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 6.0000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 3.4100e+02, 1.1200e+02, 1.3500e+02, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 7.8000e+01, 3.0000e+00],
        [1.0000e+00, 1.8730e+03, 4.0000e+00, 4.0000e+00, 4.4000e+01, 0.0000e+00,
         3.2000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.9070e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 2.3000e+01,
         6.0000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.4300e+02, 4.0000e+00, 4.0000e+00, 6.8000e+01, 2.3000e+01,
         6.0000e+01, 7.2000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.2360e+03, 1.3800e+02, 1.2200e+02, 8.4000e+01, 3.5000e+01,
         4.0000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 9.4800e+02, 9.7000e+01, 1.2500e+02, 2.4000e+01, 5.4000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 6.8800e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         7.6000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 8.6000e+02, 4.0000e+00, 4.0000e+00, 7.2000e+01, 4.2000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.5000e+02, 4.0000e+00, 4.0000e+00, 6.0000e+01, 7.2000e+01,
         0.0000e+00, 1.9000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.2690e+03, 1.2100e+02, 1.3400e+02, 2.3000e+01, 6.0000e+01,
         4.3000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.2790e+03, 4.0000e+00, 1.1700e+02, 0.0000e+00, 0.0000e+00,
         4.2000e+01, 0.0000e+00, 0.0000e+00, 3.0000e+00],
        [1.0000e+00, 1.8750e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         7.2000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.4180e+03, 1.2500e+02, 1.3300e+02, 4.1000e+01, 1.1000e+01,
         3.8000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.9340e+03, 4.0000e+00, 4.0000e+00, 2.3000e+01, 7.2000e+01,
         4.9000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 6.1100e+02, 4.0000e+00, 4.0000e+00, 1.5000e+01, 0.0000e+00,
         3.7000e+01, 0.0000e+00, 2.6000e+01, 3.0000e+00],
        [1.0000e+00, 7.4800e+02, 4.0000e+00, 4.0000e+00, 8.8000e+01, 7.9000e+01,
         4.6000e+01, 0.0000e+00, 0.0000e+00, 3.0000e+00],
        [1.0000e+00, 3.9000e+02, 1.1700e+02, 9.5000e+01, 0.0000e+00, 6.8000e+01,
         2.3000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.2060e+03, 1.0100e+02, 1.3800e+02, 3.9000e+01, 2.8000e+01,
         1.3000e+01, 5.1000e+01, 3.0000e+00, 2.0000e+00],
        [1.0000e+00, 2.2700e+02, 4.0000e+00, 4.0000e+00, 0.0000e+00, 3.9000e+01,
         8.5000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.3490e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 5.0000e+01,
         0.0000e+00, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 5.4800e+02, 4.0000e+00, 4.0000e+00, 2.3000e+01, 6.0000e+01,
         6.7000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.3720e+03, 1.1700e+02, 1.3500e+02, 8.0000e+01, 0.0000e+00,
         3.8000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 1.3250e+03, 4.0000e+00, 9.4000e+01, 0.0000e+00, 6.4000e+01,
         1.3000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00],
        [1.0000e+00, 7.3900e+02, 4.0000e+00, 4.0000e+00, 7.2000e+01, 0.0000e+00,
         6.8000e+01, 0.0000e+00, 0.0000e+00, 3.0000e+00],
        [1.0000e+00, 1.8440e+03, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00,
         2.4000e+01, 3.0000e+00, 2.0000e+00, 2.0000e+00]], device='cuda:6') labels tensor([[-100, -100, -100, -100,   38,   82, -100, -100, -100, -100],
        [-100, -100, -100, -100,   78,   42,   59,   91, -100, -100],
        [-100, -100, -100, -100,   80, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   23, -100,   67, -100, -100, -100],
        [-100, -100, -100, -100,   45, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   60, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   27,   28,   32, -100, -100],
        [-100, -100, -100, -100, -100,   92,   85, -100, -100, -100],
        [-100, -100, -100, -100,   33, -100,   12,   66, -100, -100],
        [-100, -100, -100, -100,   15,   58,   36,   44,   17, -100],
        [-100, -100, -100, -100,   57, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   84, -100,   11, -100, -100, -100],
        [-100, -100, -100, -100, -100,   75,   55, -100, -100, -100],
        [-100, -100, -100, -100, -100,   23,   72, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,    8, -100, -100,   40,   51, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   31,   20,   88,   32, -100, -100],
        [-100, -100, -100, -100,   92,   10, -100,   22, -100, -100],
        [-100, -100, -100, -100, -100,   68,   72, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   22, -100, -100],
        [-100, -100, -100, -100,   23, -100,   42,   80, -100, -100],
        [-100, -100, -100, -100, -100,   68,   60, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   51,   60,   59, -100, -100, -100],
        [-100, -100, -100, -100,   68,   23, -100,   15, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   38, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   56, -100, -100],
        [-100, -100, -100, -100,   51, -100,   78, -100, -100, -100],
        [-100, -100, -100, -100,   54, -100,   63,   30, -100, -100],
        [-100, -100, -100, -100,   80,   17, -100, -100, -100, -100]],
       device='cuda:1') tensor([[-100, -100, -100, -100,   72,   43, -100,   15, -100, -100],
        [-100, -100, -100, -100,   55, -100,   66, -100, -100, -100],
        [-100, -100, -100, -100, -100,   85,   28, -100, -100, -100],
        [-100, -100, -100, -100,   40,   38, -100, -100, -100, -100],
        [-100, -100, -100, -100,   31,   88, -100, -100, -100, -100],
        [-100, -100, -100, -100,   68, -100, -100,   71, -100, -100],
        [-100, -100, -100, -100,   80, -100,   66, -100, -100, -100],
        [-100, -100, -100, -100,   80,   68,   23, -100, -100, -100],
        [-100, -100, -100, -100,   60,   78, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   68, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   78, -100,   29, -100, -100, -100],
        [-100, -100, -100, -100,   14, -100, -100, -100,   61, -100],
        [-100, -100, -100, -100, -100,    5, -100, -100, -100, -100],
        [-100, -100, -100, -100,   31, -100,   90, -100, -100, -100],
        [-100, -100, -100, -100,   79, -100,   87, -100,   18, -100],
        [-100, -100, -100, -100, -100,   36,   26, -100, -100, -100],
        [-100, -100, -100, -100,   68, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   48, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   72, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   51,   87, -100, -100, -100],
        [-100, -100, -100, -100, -100,   60, -100, -100, -100, -100],
        [-100, -100, -100, -100,   51, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   23,   60, -100, -100, -100, -100],
        [-100, -100, -100, -100,   80,   68,   23, -100, -100, -100],
        [-100, -100, -100, -100,   51,   68,   60, -100, -100, -100],
        [-100, -100, -100, -100,   68,   60, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   41,   35,   10, -100, -100],
        [-100, -100, -100, -100,    7, -100,   12,   35, -100, -100],
        [-100, -100, -100, -100, -100, -100,   43, -100, -100, -100]],
       device='cuda:2') tensor([[-100, -100, -100, -100, -100,   73, -100, -100, -100, -100],
        [-100, -100, -100, -100,   72, -100,   19, -100, -100, -100],
        [-100, -100, -100, -100, -100,   67, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   68, -100,   67, -100, -100],
        [-100, -100, -100, -100, -100,   68,   71,   59, -100, -100],
        [-100, -100, -100, -100, -100,   72, -100,   60, -100, -100],
        [-100, -100, -100, -100,   16,   71, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   72,   42, -100, -100],
        [-100, -100, -100, -100,   83, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   43,   72,   71, -100, -100, -100],
        [-100, -100, -100, -100,   51,   23, -100, -100, -100, -100],
        [-100, -100, -100, -100,   68,   23, -100,   71, -100, -100],
        [-100, -100, -100, -100, -100,    7, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   68, -100,   60, -100, -100],
        [-100, -100, -100, -100, -100,   68, -100,   60, -100, -100],
        [-100, -100, -100, -100, -100,   37, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   45,    9, -100, -100, -100],
        [-100, -100, -100, -100, -100,   41, -100, -100, -100, -100],
        [-100, -100, -100, -100,   91, -100,   59,   42, -100, -100],
        [-100, -100, -100, -100, -100, -100,   88, -100, -100, -100],
        [-100, -100, -100, -100,   68, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   23,   71, -100, -100, -100],
        [-100, -100, -100, -100,   82,   14,   12, -100, -100, -100],
        [-100, -100, -100, -100,   80,   60, -100,   10, -100, -100],
        [-100, -100, -100, -100,   23, -100,   72,   71, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   68,   60, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   22,    8, -100, -100, -100],
        [-100, -100, -100, -100, -100,   42,   45, -100, -100, -100],
        [-100, -100, -100, -100,   80,   68, -100,   60,   78, -100],
        [-100, -100, -100, -100,   51, -100, -100, -100,   20, -100],
        [-100, -100, -100, -100,   80, -100,   71, -100, -100, -100]],
       device='cuda:0') tensor([[-100, -100, -100, -100, -100, -100,   72,   71, -100, -100],
        [-100, -100, -100, -100, -100,   68,   23, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   60,   71, -100, -100, -100],
        [-100, -100, -100, -100,   41, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   12,   46,    5, -100, -100, -100],
        [-100, -100, -100, -100,   80, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   12,   54,   33, -100, -100],
        [-100, -100, -100, -100,   14,   40,   82, -100, -100, -100],
        [-100, -100, -100, -100,   79, -100, -100, -100,   37, -100],
        [-100, -100, -100, -100,   60,   71,   45, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   72, -100, -100],
        [-100, -100, -100, -100,   72, -100, -100,   47, -100, -100],
        [-100, -100, -100, -100,   15,   87,   26, -100, -100, -100],
        [-100, -100, -100, -100, -100,   68,   60, -100, -100, -100],
        [-100, -100, -100, -100,   68,   72,   23, -100, -100, -100],
        [-100, -100, -100, -100,    7, -100,   73, -100, -100, -100],
        [-100, -100, -100, -100,   60, -100,   68, -100, -100, -100],
        [-100, -100, -100, -100, -100,   68, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   67,   19, -100, -100, -100],
        [-100, -100, -100, -100,   72,   60,    6, -100, -100, -100],
        [-100, -100, -100, -100, -100,   58, -100,   69, -100, -100],
        [-100, -100, -100, -100, -100,   23,   84, -100, -100, -100],
        [-100, -100, -100, -100, -100,   60,   71, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   43, -100, -100, -100],
        [-100, -100, -100, -100, -100,   48, -100,   87,   76, -100],
        [-100, -100, -100, -100, -100,    7,   14, -100, -100, -100],
        [-100, -100, -100, -100, -100,   60, -100,   68,   45, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   88, -100, -100, -100, -100],
        [-100, -100, -100, -100,   80, -100, -100,   67, -100, -100],
        [-100, -100, -100, -100, -100,   23,   60, -100, -100, -100]],
       device='cuda:7') tensor([[-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   60, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   51, -100,   60, -100, -100, -100],
        [-100, -100, -100, -100,   31, -100,   28, -100, -100, -100],
        [-100, -100, -100, -100, -100,   57,   54,   28, -100, -100],
        [-100, -100, -100, -100,   73,   62, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   31,   46, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100,   27, -100],
        [-100, -100, -100, -100, -100, -100, -100,   79, -100, -100],
        [-100, -100, -100, -100,    7,   14,   12, -100, -100, -100],
        [-100, -100, -100, -100,   42,   59,   22, -100, -100, -100],
        [-100, -100, -100, -100,   12, -100,   24, -100, -100, -100],
        [-100, -100, -100, -100,   68, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   48,   26, -100, -100, -100, -100],
        [-100, -100, -100, -100,   31, -100,   57,   64,   73, -100],
        [-100, -100, -100, -100,   32,   62, -100,   68, -100, -100],
        [-100, -100, -100, -100, -100,   51,   72, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   13,   28, -100, -100, -100],
        [-100, -100, -100, -100,   60, -100,   45, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   60, -100, -100, -100],
        [-100, -100, -100, -100, -100,   15, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   62, -100, -100, -100, -100],
        [-100, -100, -100, -100,   51,   23,   60, -100, -100, -100],
        [-100, -100, -100, -100,   37,   36,   26, -100, -100, -100],
        [-100, -100, -100, -100,   57,   31, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,    8,   35,   84, -100, -100],
        [-100, -100, -100, -100, -100, -100,   11, -100, -100, -100],
        [-100, -100, -100, -100,   67, -100,   78, -100,   71, -100]],
       device='cuda:4') tensor([[-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   14,   33, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   68,   60,   72, -100, -100],
        [-100, -100, -100, -100, -100,   57, -100,   25, -100, -100],
        [-100, -100, -100, -100, -100,   87,   26, -100, -100, -100],
        [-100, -100, -100, -100, -100,   60,   78, -100, -100, -100],
        [-100, -100, -100, -100,   80, -100,   56, -100, -100, -100],
        [-100, -100, -100, -100,   72,   78,   19, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   60, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   60,   37, -100, -100, -100],
        [-100, -100, -100, -100,   68, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   55,   86, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   60, -100, -100],
        [-100, -100, -100, -100,   51,   57, -100, -100, -100, -100],
        [-100, -100, -100, -100,   14,   66,   12,   33,    7, -100],
        [-100, -100, -100, -100, -100,   78,   67, -100, -100, -100],
        [-100, -100, -100, -100, -100,   68, -100,   45,   83, -100],
        [-100, -100, -100, -100,   23, -100,   71, -100, -100, -100],
        [-100, -100, -100, -100,   68, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   72,   71, -100, -100, -100],
        [-100, -100, -100, -100, -100,   18, -100,   58, -100, -100],
        [-100, -100, -100, -100,   15, -100, -100,   45, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   46, -100, -100, -100],
        [-100, -100, -100, -100, -100,   83, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   67, -100, -100, -100, -100],
        [-100, -100, -100, -100,   79, -100,   37, -100, -100, -100],
        [-100, -100, -100, -100, -100,   23,   60, -100, -100, -100]],
       device='cuda:5') tensor([[-100, -100, -100, -100, -100,   72, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   91, -100, -100],
        [-100, -100, -100, -100, -100,   71,   78, -100, -100, -100],
        [-100, -100, -100, -100,   40,   65, -100, -100, -100, -100],
        [-100, -100, -100, -100,    7,   12, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   71, -100, -100, -100],
        [-100, -100, -100, -100, -100,   23, -100,   67,   71, -100],
        [-100, -100, -100, -100, -100,   36,   26, -100, -100, -100],
        [-100, -100, -100, -100, -100,   51, -100, -100, -100, -100],
        [-100, -100, -100, -100,   51,   68,   60, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   31,   88,   90, -100, -100, -100],
        [-100, -100, -100, -100,   68,   23, -100, -100,   45, -100],
        [-100, -100, -100, -100, -100, -100,   60, -100,   51, -100],
        [-100, -100, -100, -100,   51, -100,   72, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   37, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   59, -100, -100, -100],
        [-100, -100, -100, -100,   80,   68, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   23, -100, -100, -100],
        [-100, -100, -100, -100,   80, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,    7,   57,   25, -100, -100, -100],
        [-100, -100, -100, -100, -100,   87, -100, -100,   37, -100],
        [-100, -100, -100, -100, -100, -100,   67, -100, -100, -100],
        [-100, -100, -100, -100,   68,   43,   42,   59, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   55, -100, -100],
        [-100, -100, -100, -100, -100,   71,   68, -100, -100, -100],
        [-100, -100, -100, -100, -100,   38, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   72, -100, -100, -100],
        [-100, -100, -100, -100,   11, -100,   65, -100, -100, -100],
        [-100, -100, -100, -100, -100,   67, -100, -100, -100, -100],
        [-100, -100, -100, -100,   64,   46, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   11,   10, -100, -100]],
       device='cuda:3') tensor([[-100, -100, -100, -100, -100, -100,   45, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   68,   53, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100,   68, -100],
        [-100, -100, -100, -100,   68, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   23, -100,   47, -100, -100, -100],
        [-100, -100, -100, -100,   51,   23,   60,   72, -100, -100],
        [-100, -100, -100, -100,   31,   90, -100, -100, -100, -100],
        [-100, -100, -100, -100,   68, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   60, -100, -100, -100],
        [-100, -100, -100, -100,   48,   18,   76, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   71, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   67, -100, -100, -100],
        [-100, -100, -100, -100, -100,   60, -100, -100, -100, -100],
        [-100, -100, -100, -100,   51,   23, -100,   39,   49, -100],
        [-100, -100, -100, -100,   68,   60, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   87, -100,   58, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   92,   85, -100],
        [-100, -100, -100, -100,   80,   68,   23, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   51, -100, -100],
        [-100, -100, -100, -100,   35, -100,   85, -100, -100, -100],
        [-100, -100, -100, -100,   51,   60,   45, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   84, -100, -100, -100, -100],
        [-100, -100, -100, -100,    7, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   43, -100,   51,   67, -100],
        [-100, -100, -100, -100,   60,   71, -100, -100, -100, -100]],
       device='cuda:6') tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0]], device='cuda:1') tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0]], device='cuda:7') tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0]], device='cuda:2') tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], device='cuda:4') tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0]], device='cuda:0') tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0]], device='cuda:3') tensor([[1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0]], device='cuda:6') tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0]], device='cuda:5') tensor([[   1, 1865,    4,    4,   82,   80,   11,    3,    2,    2],
        [   1, 1021,    4,    4,    0,    0,    0,   91,    3,    2],
        [   1, 1315,  102,  133,   80,   84,   31,   20,    0,    3],
        [   1, 1649,    4,    4,   68,   23,   60,   67,    3,    2],
        [   1, 1051,    4,    4,   38,   63,   73,    3,    2,    2],
        [   1,  180,    4,    4,    0,   60,   78,    3,    2,    2],
        [   1, 1019,    4,    4,   31,   27,   32,    3,    2,    2],
        [   1, 1757,    4,    4,   31,   92,   85,    3,    2,    2],
        [   1,  478,   95,  135,   33,   24,   12,    0,    3,    2],
        [   1, 1605,    4,    4,   15,   69,   58,   36,   44,    3],
        [   1, 1354,    4,   95,   57,   35,    5,    3,    2,    2],
        [   1, 1826,    4,    4,   84,    0,   11,   10,    3,    2],
        [   1,  965,    4,    4,   40,    0,   55,    3,    2,    2],
        [   1, 1237,  117,  133,   68,   23,   72,   15,    3,    2],
        [   1, 2287,    4,    4,   79,    0,   76,    3,    2,    2],
        [   1,  948,    4,    4,    8,   70,   12,   40,   51,    3],
        [   1,  980,    4,    4,   41,   11,   55,   82,   22,    3],
        [   1,  766,    4,    4,    0,   20,   88,   32,    3,    2],
        [   1, 1363,    4,    4,   92,   10,   77,   22,    3,    2],
        [   1,  663,    4,  117,   51,    0,   72,    3,    2,    2],
        [   1, 1400,    4,    4,   84,    0,   75,   22,    3,    2],
        [   1,  596,  100,    4,    0,    6,   60,   42,   43,    3],
        [   1, 1315,    4,    4,   51,   68,   60,    3,    2,    2],
        [   1,  856,    4,    4,   18,   36,   76,    3,    2,    2],
        [   1,  316,  133,  135,   51,   60,   59,    3,    2,    2],
        [   1,  203,  125,  107,   23,   72,   15,    3,    2,    2],
        [   1, 2218,    4,    4,    7,   78,   12,   40,    3,    2],
        [   1, 1416,  117,   95,   84,   41,   38,    3,    2,    2],
        [   1, 1363,    4,   99,   80,   12,   56,    3,    2,    2],
        [   1,  408,    4,    4,   80,    0,   91,    3,    2,    2],
        [   1, 1346,    4,    4,   16,   63,   30,    3,    2,    2],
        [   1,  234,    4,    4,    0,   60,   71,   17,   49,    3]],
       device='cuda:1') tensor([[   1, 1176,    4,    4,   21,   28,   62,    0,    3,    2],
        [   1,  205,    4,    4,    0,   23,   60,    3,    2,    2],
        [   1,  754,  117,  137,    0,   23,   60,    3,    2,    2],
        [   1, 1556,    4,  111,   51,    0,   60,    3,    2,    2],
        [   1,  481,    4,    4,   31,    0,   28,    3,    2,    2],
        [   1,  305,  135,    4,   80,    0,   64,   54,   28,    3],
        [   1, 2117,  117,   95,   73,    0,   55,    3,    2,    2],
        [   1, 1768,    4,    4,   72,   31,   59,    3,    2,    2],
        [   1,  253,  109,   94,   23,   79,   31,   27,    3,    2],
        [   1,  566,   95,    4,   18,   50,    0,   53,   79,    3],
        [   1, 1551,    4,    4,    0,   12,    8,   70,    3,    2],
        [   1,  188,    4,    4,   42,    0,   22,    3,    2,    2],
        [   1, 1327,    4,    4,    0,   54,   24,    3,    2,    2],
        [   1, 1836,  133,  135,   68,   23,   71,    3,    2,    2],
        [   1, 2028,  133,  123,   69,   18,   36,    3,    2,    2],
        [   1,  459,  125,  135,   31,    0,    0,   64,   73,    3],
        [   1, 1084,    4,    4,   32,   62,   68,    3,    2,    2],
        [   1, 1979,    4,    4,   31,   51,   68,   72,    3,    2],
        [   1,  273,    4,    4,   80,   68,    0,   71,    3,    2],
        [   1, 1388,    4,    4,   88,   13,   28,    3,    2,    2],
        [   1,  659,    4,    4,   60,   71,   45,    3,    2,    2],
        [   1, 1251,    4,    4,    0,   68,   78,    3,    2,    2],
        [   1,  678,  133,  135,    0,   68,   60,    3,    2,    2],
        [   1,  383,    4,    4,   79,   15,   87,   48,    3,    2],
        [   1,  922,    4,    4,   23,   62,   32,    3,    2,    2],
        [   1,  456,  117,   95,   51,   23,   60,    3,    2,    2],
        [   1, 2033,    4,    4,   48,   37,   36,   26,    3,    2],
        [   1,  623,  125,  135,   79,   31,   90,   28,    3,    2],
        [   1, 1203,    4,    4,    0,   13,   28,    3,    2,    2],
        [   1, 1051,    4,    4,    7,    8,   33,    0,   84,    3],
        [   1,  858,  111,   92,   35,   11,   22,    3,    2,    2],
        [   1,  533,  117,  118,    0,    0,    0,   23,    3,    2]],
       device='cuda:4') tensor([[   1, 2282,    4,    4,   72,   43,   68,   15,    0,    3],
        [   1,  270,    4,    4,   55,   66,   14,    3,    2,    2],
        [   1, 1863,    4,    4,   92,    0,   28,    3,    2,    2],
        [   1, 2026,  133,  117,   40,   38,   75,    3,    2,    2],
        [   1,  252,    4,    4,   31,   88,   27,    3,    2,    2],
        [   1,  793,    4,    4,   68,    0,   71,    3,    2,    2],
        [   1, 1941,    4,    4,   80,   14,   33,    3,    2,    2],
        [   1, 1361,    4,    4,   80,   68,   23,    3,    2,    2],
        [   1, 1787,    4,    4,    0,   78,    0,    3,    2,    2],
        [   1,  151,  117,  118,   68,    0,   12,   38,   55,    3],
        [   1, 1634,    4,    4,   68,   23,   71,    3,    2,    2],
        [   1, 1601,    4,  111,   78,   91,   29,    3,    2,    2],
        [   1,  729,   95,    4,   14,   66,   12,   33,    7,    3],
        [   1, 2266,  133,  135,    0,    0,    0,    3,    2,    2],
        [   1, 1033,    4,    4,   20,   88,   90,   28,   32,    3],
        [   1,  321,    4,   97,   79,   15,   87,    0,   18,    3],
        [   1, 1927,    4,   97,   37,    0,   36,   26,    0,    3],
        [   1, 1586,    4,  111,   68,   23,   54,    3,    2,    2],
        [   1, 1943,    4,    4,   60,   48,   54,    3,    2,    2],
        [   1, 1778,  117,   95,   51,   72,   67,    3,    2,    2],
        [   1, 1967,    4,    4,   68,   23,   78,    3,    2,    2],
        [   1,  374,  135,    4,   10,   35,    0,   80,    3,    2],
        [   1, 1438,   95,  135,   80,   51,    0,   71,    3,    2],
        [   1,  925,  131,    4,   59,   17,    6,   80,    3,    2],
        [   1, 2174,    4,    4,   51,   23,   60,    3,    2,    2],
        [   1, 1912,    4,    4,   23,   60,   78,    3,    2,    2],
        [   1, 1590,    4,    4,   80,   68,   23,    3,    2,    2],
        [   1, 1736,    4,    4,   68,   60,   72,    3,    2,    2],
        [   1, 1828,  117,   95,   68,    0,   72,    3,    2,    2],
        [   1, 1173,    4,    4,    0,    0,   10,    3,    2,    2],
        [   1, 2274,  135,    4,    7,   14,   12,    3,    2,    2],
        [   1,  270,    4,    4,   23,   44,    0,    3,    2,    2]],
       device='cuda:2') tensor([[   1, 1108,    4,    4,   23,   72,   67,   77,    3,    2],
        [   1,  215,    4,    4,   68,   72,   71,    3,    2,    2],
        [   1,  423,    4,    4,   91,   71,   68,    3,    2,    2],
        [   1, 1378,    4,    4,   68,   60,   71,    3,    2,    2],
        [   1, 1940,   97,  125,   41,   22,   11,    0,    3,    2],
        [   1,  676,    4,    4,   12,    0,   57,    5,    3,    2],
        [   1,  477,    4,    4,   80,   78,   71,    3,    2,    2],
        [   1,  693,    4,    4,   14,   12,   54,   33,    3,    2],
        [   1,  995,    4,    4,   34,    0,    0,    3,    2,    2],
        [   1, 1353,   94,  114,   87,   37,   58,    3,    2,    2],
        [   1, 2152,  133,  135,    0,   71,   45,    3,    2,    2],
        [   1, 1181,    4,  111,   51,   68,   23,   71,    3,    2],
        [   1, 1419,    4,    4,   72,   92,   10,   47,   21,    3],
        [   1,  372,    4,    4,   87,   37,   26,    3,    2,    2],
        [   1, 1115,  133,  135,   51,    0,   60,    3,    2,    2],
        [   1,  739,    4,    4,   68,   72,   60,   23,    3,    2],
        [   1,  286,   97,  125,    7,   57,   31,   73,    3,    2],
        [   1, 2024,    4,    4,   80,   60,   72,    0,    3,    2],
        [   1, 2148,  133,  135,   51,   68,   23,    3,    2,    2],
        [   1, 1838,    4,    4,   23,   67,   19,    3,    2,    2],
        [   1, 1238,    4,    4,   72,   60,    0,    3,    2,    2],
        [   1, 1884,   97,  125,   87,   48,    0,    3,    2,    2],
        [   1,  256,    4,    4,   80,   23,    0,    3,    2,    2],
        [   1, 1201,    4,    4,   51,   60,   71,    3,    2,    2],
        [   1, 1642,    4,  111,    0,   71,   43,    3,    2,    2],
        [   1, 1694,    4,    4,   26,   48,    0,   87,   76,    3],
        [   1,  922,  133,  135,    0,    0,   14,    3,    2,    2],
        [   1, 1433,    4,    4,   60,   68,   45,   51,    3,    2],
        [   1,  464,    4,    4,    0,   10,    0,    3,    2,    2],
        [   1, 1691,    4,    4,   20,   46,    0,   62,    3,    2],
        [   1, 1067,    4,    4,   80,   23,   67,    6,    3,    2],
        [   1,  539,   95,  135,   68,   23,   60,   71,    3,    2]],
       device='cuda:7') tensor([[   1,  478,   97,  125,   88,   73,   60,    0,    3,    2],
        [   1,  646,    4,    4,   72,   67,   19,    3,    2,    2],
        [   1,  936,    4,    4,   60,   67,   71,    3,    2,    2],
        [   1,  942,  118,    4,   43,   68,    0,    3,    2,    2],
        [   1, 1315,   97,  125,   51,   68,   71,   59,    3,    2],
        [   1,  479,   97,  107,   68,   72,   59,   60,   23,    3],
        [   1,  303,  119,  135,   16,   71,   45,   78,    3,    2],
        [   1, 2069,    4,  117,   68,   72,    6,    3,    2,    2],
        [   1,  367,    4,    4,   83,   52,   67,   91,    3,    2],
        [   1, 2117,   97,  136,   68,   43,   60,    0,    3,    2],
        [   1, 2040,    4,    4,   51,   23,   60,   71,    3,    2],
        [   1, 2234,    4,    4,   68,   23,    0,   71,    3,    2],
        [   1,  431,    4,    4,   60,    7,   14,   71,   66,    3],
        [   1, 1891,    4,    4,   51,    0,    0,    3,    2,    2],
        [   1,  471,  111,  125,   23,   60,   72,    3,    2,    2],
        [   1, 2295,    4,    4,   79,   37,   15,    3,    2,    2],
        [   1,  555,    4,  111,   58,   45,    9,    3,    2,    2],
        [   1,  976,   97,  125,   84,    0,   10,   65,    3,    2],
        [   1, 1438,    4,    4,   91,   67,    0,    3,    2,    2],
        [   1, 2080,    4,    4,   31,   20,   88,    3,    2,    2],
        [   1,  967,    4,    4,   68,   60,   42,    3,    2,    2],
        [   1, 1305,    4,    4,   80,   68,   23,   71,    3,    2],
        [   1, 2070,    4,    4,   82,   14,   12,    0,    3,    2],
        [   1,  854,    4,    4,   80,   60,   53,   10,    3,    2],
        [   1,  889,    4,    4,   23,   60,   72,   71,    3,    2],
        [   1, 1062,    4,    4,   15,   37,   44,    3,    2,    2],
        [   1, 1094,    4,    4,   35,   68,   60,    7,    3,    2],
        [   1, 2129,    4,    4,   84,   11,    8,    3,    2,    2],
        [   1, 1542,    4,    4,   23,   42,   45,    3,    2,    2],
        [   1, 2121,  118,    4,   80,   68,   23,    0,   78,    3],
        [   1, 1891,    4,    4,   51,   68,   23,   60,   31,    3],
        [   1,  359,    4,    4,   80,    0,   71,    3,    2,    2]],
       device='cuda:0') tensor([[   1, 1120,   97,  117,    0,   72,   71,    3,    2,    2],
        [   1,  327,    4,    4,   68,   23,   60,   71,    3,    2],
        [   1, 1006,    4,    4,   45,   78,   67,    3,    2,    2],
        [   1,  260,    4,    4,   40,   38,   65,   90,    3,    2],
        [   1, 1700,    4,    4,    7,   14,   12,   66,    3,    2],
        [   1, 1092,    4,  111,    0,   60,    0,    3,    2,    2],
        [   1, 1600,    4,    4,   23,   67,   71,    3,    2,    2],
        [   1,  887,    4,    4,   69,   36,   26,    3,    2,    2],
        [   1, 2043,   95,  135,   12,   51,   67,    3,    2,    2],
        [   1,  469,  117,   95,   68,   60,   78,    3,    2,    2],
        [   1,  918,    4,    4,   12,    7,    0,   35,   13,    3],
        [   1, 1821,    4,    4,   20,   31,   90,    3,    2,    2],
        [   1,  930,    4,    4,   68,   23,   71,   29,   45,    3],
        [   1,  805,    4,   97,    6,   60,   42,   72,   51,    3],
        [   1, 1069,    4,    4,   51,   23,   72,    3,    2,    2],
        [   1, 1889,    4,    4,   79,    0,   37,    3,    2,    2],
        [   1, 1005,    4,    4,   68,   42,   59,    3,    2,    2],
        [   1, 1251,    4,    4,   80,   68,   82,    3,    2,    2],
        [   1, 1930,    4,   97,   68,   23,   72,   59,    3,    2],
        [   1, 1005,    4,    4,   80,   23,    0,   56,    3,    2],
        [   1, 1163,    4,    4,    7,   57,   92,   85,   25,    3],
        [   1,  716,  117,  106,   79,   87,    0,   58,    3,    2],
        [   1, 1879,  133,  135,   23,   67,    0,    3,    2,    2],
        [   1,  533,  125,  118,   43,   72,   59,    3,    2,    2],
        [   1, 1748,  133,    4,   31,    5,   74,   55,   86,    3],
        [   1, 1660,    4,    4,   91,   78,   71,   68,   72,    3],
        [   1, 1017,    4,    4,   41,   38,   22,    3,    2,    2],
        [   1,  642,  115,   95,   72,   59,   72,    3,    2,    2],
        [   1,  750,    4,    4,   11,   40,   65,    3,    2,    2],
        [   1,  757,    4,    4,   87,    0,   71,    3,    2,    2],
        [   1, 2005,   96,  135,   64,   46,    0,    3,    2,    2],
        [   1,  418,  133,    4,   84,   41,   11,   10,    3,    2]],
       device='cuda:3') tensor([[   1,  233,    4,  128,   80,   43,   45,    3,    2,    2],
        [   1, 1654,  125,  133,   87,   48,   69,    3,    2,    2],
        [   1,  368,    4,    4,   51,   68,   53,    3,    2,    2],
        [   1,  698,    4,    4,   45,   71,   78,    0,   68,    3],
        [   1, 1918,    4,    4,   23,   71,   16,    3,    2,    2],
        [   1, 1288,    4,    4,   68,   12,    0,   24,   82,    3],
        [   1, 1449,    4,    4,   23,    0,   47,    3,    2,    2],
        [   1, 2267,  117,  135,   58,   23,   60,   72,   78,    3],
        [   1, 2168,    4,    4,   31,   90,   32,    3,    2,    2],
        [   1, 1326,    4,    4,   68,   23,   60,    3,    2,    2],
        [   1,  243,    4,    4,   68,   23,   60,   72,    3,    2],
        [   1, 1988,  117,   95,   84,   35,   40,    3,    2,    2],
        [   1,  948,  115,   95,   24,   33,   60,    3,    2,    2],
        [   1,  688,    4,    4,   48,   18,    0,    3,    2,    2],
        [   1,  860,    4,    4,   72,   42,   71,    3,    2,    2],
        [   1,  250,    4,    4,   60,   72,   19,    3,    2,    2],
        [   1, 1269,  117,   95,    0,   60,   43,    3,    2,    2],
        [   1,  518,    4,  111,   51,   42,   39,    3,    2,    2],
        [   1, 1875,    4,    4,   68,   60,   72,    3,    2,    2],
        [   1,  899,  117,  105,   84,   41,   11,   38,   10,    3],
        [   1,  504,    4,    4,    0,   72,    6,   43,    3,    2],
        [   1,  611,    4,    4,   15,   37,   58,    0,    3,    2],
        [   1,  748,    4,    4,   88,    0,    0,    0,   85,    3],
        [   1,  390,  117,   95,   80,   68,   23,    3,    2,    2],
        [   1, 1207,  125,  135,   28,   13,   56,    3,    2,    2],
        [   1, 1799,    4,    4,   35,    0,   85,    3,    2,    2],
        [   1, 1349,    4,    4,   51,   60,   45,    3,    2,    2],
        [   1, 1437,    4,    4,    0,   60,   67,    3,    2,    2],
        [   1,  166,  117,  133,   80,   84,   72,    0,    3,    2],
        [   1, 1325,    4,  111,    7,   64,    0,    3,    2,    2],
        [   1, 1591,    4,    4,    0,   43,   71,   51,    3,    2],
        [   1,  183,    4,    4,   60,   71,   24,    3,    2,    2]],
       device='cuda:6') tensor([[   1,  514,  117,  116,   68,   60,   71,   43,    3,    2],
        [   1, 1714,  133,  135,    7,   14,    0,    3,    2,    2],
        [   1, 1553,    4,    4,   31,    0,   73,    3,    2,    2],
        [   1,  757,    4,    4,   87,   67,   71,    3,    2,    2],
        [   1,  898,  135,    4,   80,   68,   60,   72,   91,    3],
        [   1, 1051,    4,  111,   88,   21,   63,   25,    3,    2],
        [   1, 2216,    4,    4,   58,   87,   48,   26,    0,    3],
        [   1,  300,    4,  111,    0,   60,   78,    3,    2,    2],
        [   1,  923,    4,    4,   80,   49,   56,    3,    2,    2],
        [   1, 1128,    4,    4,   72,   78,   19,    3,    2,    2],
        [   1, 2183,    4,    4,   79,   48,   37,   26,    3,    2],
        [   1, 2112,    4,    4,   51,   60,   52,    3,    2,    2],
        [   1,  196,  133,  135,   80,   60,    0,    3,    2,    2],
        [   1, 1704,    4,    4,   68,   23,   60,   71,    3,    2],
        [   1, 1736,  111,  126,   68,   23,   60,    3,    2,    2],
        [   1, 1284,   97,  125,   59,   75,   55,   86,    3,    2],
        [   1, 1387,   95,  135,   43,   68,   71,   60,    3,    2],
        [   1, 1234,    4,    4,   51,   57,   27,    3,    2,    2],
        [   1, 1287,  113,  135,   14,   12,   33,    3,    2,    2],
        [   1, 1006,    4,    4,   45,    0,    0,   67,    3,    2],
        [   1, 1589,    4,  111,   51,   68,    0,   71,   45,    3],
        [   1,  992,    4,    4,   68,   23,    0,   71,    3,    2],
        [   1, 2051,  137,   95,   23,   67,   91,    3,    2,    2],
        [   1, 1120,  118,  125,   51,   72,    0,   59,    3,    2],
        [   1, 1952,    4,    4,   18,   36,   58,    3,    2,    2],
        [   1,  364,    4,    4,   15,   37,   45,    3,    2,    2],
        [   1,  653,    4,    4,   84,   41,   10,    3,    2,    2],
        [   1,  526,    4,    4,   68,    0,   42,   46,   73,    3],
        [   1, 1958,   95,  135,   80,   83,   51,    0,    3,    2],
        [   1,  367,    4,    4,   83,   52,   67,    3,    2,    2],
        [   1,  728,  118,    4,   79,   87,   76,   37,    3,    2],
        [   1, 1696,    4,    4,    0,   23,   60,    3,    2,    2]],
       device='cuda:5') tensor([[-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   78,   42,   59, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100,   90, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   45, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   23, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   66, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   35, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   75, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   15, -100, -100],
        [-100, -100, -100, -100, -100,   36, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   31, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   68, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   35, -100, -100, -100, -100],
        [-100, -100, -100, -100,   23, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   59, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   51, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   80, -100, -100, -100, -100, -100]],
       device='cuda:1') tensor([[-100, -100, -100, -100, -100, -100, -100,   88, -100, -100],
        [-100, -100, -100, -100,   68, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   68, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   68, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   46, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   57, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   62, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   37, -100,   87, -100, -100, -100],
        [-100, -100, -100, -100,   14, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   59, -100, -100, -100, -100],
        [-100, -100, -100, -100,   12, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   88,   57, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   80, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   23, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   51, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   80, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   64, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   12, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   67,   45,   78, -100, -100, -100]],
       device='cuda:4') tensor([[-100, -100, -100, -100, -100, -100, -100, -100,   71, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   85, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   60, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   60, -100,   71, -100, -100, -100],
        [-100, -100, -100, -100, -100,   71, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   14,    5,   63, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   36, -100, -100],
        [-100, -100, -100, -100, -100,   58, -100, -100,   76, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   40, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   87, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   60, -100, -100, -100, -100],
        [-100, -100, -100, -100,   84,   41, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   43, -100, -100, -100]],
       device='cuda:2') tensor([[-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   35, -100, -100],
        [-100, -100, -100, -100, -100,   46, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   14,   40,   82, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   60, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   68, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   68, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,    6, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   69, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   84, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   68, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   18, -100, -100, -100],
        [-100, -100, -100, -100,   80,    7, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   80, -100,   22, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   88, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   67, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100]],
       device='cuda:7') tensor([[-100, -100, -100, -100,   51, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   23, -100,   71, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   75, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   15, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   35, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   87,   37, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,    6, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   72, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   67, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   73, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100]],
       device='cuda:3') tensor([[-100, -100, -100, -100, -100, -100, -100,   80, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   60, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   71, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   71, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   78, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   23,   60, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   51, -100,    9, -100, -100, -100],
        [-100, -100, -100, -100, -100,   41, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   59, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   80, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   33, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   68, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   60, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   68, -100, -100, -100, -100]],
       device='cuda:0') tensor([[-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   67, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   43, -100, -100, -100],
        [-100, -100, -100, -100, -100,   60, -100, -100, -100, -100],
        [-100, -100, -100, -100,   51, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   24, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   76, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   71, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   23, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   23, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   26, -100, -100],
        [-100, -100, -100, -100, -100,   79,   46,   92, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   39, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   45, -100, -100, -100],
        [-100, -100, -100, -100,   23, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,   14, -100, -100],
        [-100, -100, -100, -100, -100, -100,   13, -100, -100, -100],
        [-100, -100, -100, -100,   72, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100]],
       device='cuda:6') tensor([[1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], device='cuda:1') None None None None None None tensor([[-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   33, -100, -100, -100],
        [-100, -100, -100, -100, -100,   20, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100,   69, -100],
        [-100, -100, -100, -100,   80, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   37, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   71,   78, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   23, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   60, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100,   71, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100,   23, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100,    7, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],
        [-100, -100, -100, -100,   68, -100, -100, -100, -100, -100]],
       device='cuda:5')None  None None None None None None None None None None
  warnings.warn(
tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0]], device='cuda:4') None None None None None None None None None None None None None None None None None
tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0]], device='cuda:2')tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0]], device='cuda:7')  NoneNone  NoneNone  NoneNone  NoneNone  NoneNone  NoneNone  NoneNone  NoneNone  NoneNone  NoneNone  NoneNone tensor([[1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0]], device='cuda:3') None None None None None None None None None Nonetensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0]], device='cuda:0') Nonetensor([[1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0]], device='cuda:6')  None  NoneNone NoneNone  None  NoneNone tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 0, 0]], device='cuda:5')NoneNone
 None
 None NoneNone None  None NoneNone None  None NoneNone None  None NoneNone None  None NoneNone None  None NoneNone None  None NoneNone None  None NoneNone None  None NoneNone None  None NoneNone None  None NoneNone None NoneNone
   NoneNoneNone   NoneNoneNone   NoneNoneNone
 NoneNone
None
Traceback (most recent call last):
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/run.py", line 113, in <module>
    m.train(m.config.pretrain_data, batch_size = batch_size, epochs = 1, save_model = False)
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/pretrain.py", line 139, in train
    self._contrastive_pretrain(
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/pretrain.py", line 186, in _contrastive_pretrain
    self.trip_trainer.train(dataset_file_path = dataset_file_path,
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/pretrain.py", line 71, in train
    trainer.train()
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/transformers/trainer.py", line 2123, in train
    return inner_training_loop(
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/transformers/trainer.py", line 2481, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs, num_items_in_batch)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/transformers/trainer.py", line 3579, in training_step
    loss = self.compute_loss(model, inputs, num_items_in_batch=num_items_in_batch)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/transformers/trainer.py", line 3633, in compute_loss
    outputs = model(**inputs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/parallel/data_parallel.py", line 193, in forward
    outputs = self.parallel_apply(replicas, inputs, module_kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/parallel/data_parallel.py", line 212, in parallel_apply
    return parallel_apply(
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/parallel/parallel_apply.py", line 126, in parallel_apply
    output.reraise()
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/_utils.py", line 715, in reraise
    raise exception
RuntimeError: Caught RuntimeError in replica 0 on device 0.
Original Traceback (most recent call last):
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/parallel/parallel_apply.py", line 96, in _worker
    output = module(*input, **kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/bert/bert_review.py", line 185, in forward
    return self.forward_pretrain(
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/bert/bert_review.py", line 455, in forward_pretrain
    z_context_representation, z_context_pooled = self.bert(
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/bert/bert_model.py", line 1306, in forward
    embedding_output = self.embeddings(
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/bert/bert_model.py", line 483, in forward
    inputs_embeds = self.word_embeddings(input_ids)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/sparse.py", line 190, in forward
    return F.embedding(
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/functional.py", line 2551, in embedding
    return torch.embedding(weight, input, padding_idx, scale_grad_by_freq, sparse)
RuntimeError: Expected tensor for argument #1 'indices' to have one of the following scalar types: Long, Int; but got torch.cuda.FloatTensor instead (while checking arguments for embedding)

Traceback (most recent call last):
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/run.py", line 113, in <module>
    m.train(m.config.pretrain_data, batch_size = batch_size, epochs = 1, save_model = False)
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/pretrain.py", line 139, in train
    self._contrastive_pretrain(
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/pretrain.py", line 186, in _contrastive_pretrain
    self.trip_trainer.train(dataset_file_path = dataset_file_path,
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/pretrain.py", line 71, in train
    trainer.train()
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/transformers/trainer.py", line 2123, in train
    return inner_training_loop(
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/transformers/trainer.py", line 2481, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs, num_items_in_batch)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/transformers/trainer.py", line 3579, in training_step
    loss = self.compute_loss(model, inputs, num_items_in_batch=num_items_in_batch)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/transformers/trainer.py", line 3633, in compute_loss
    outputs = model(**inputs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/parallel/data_parallel.py", line 193, in forward
    outputs = self.parallel_apply(replicas, inputs, module_kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/parallel/data_parallel.py", line 212, in parallel_apply
    return parallel_apply(
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/parallel/parallel_apply.py", line 126, in parallel_apply
    output.reraise()
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/_utils.py", line 715, in reraise
    raise exception
RuntimeError: Caught RuntimeError in replica 0 on device 0.
Original Traceback (most recent call last):
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/parallel/parallel_apply.py", line 96, in _worker
    output = module(*input, **kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/bert/bert_review.py", line 185, in forward
    return self.forward_pretrain(
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/bert/bert_review.py", line 455, in forward_pretrain
    z_context_representation, z_context_pooled = self.bert(
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/bert/bert_model.py", line 1306, in forward
    embedding_output = self.embeddings(
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yamanishi/project/airport/src/analysis/route_recommendation/BERT-Trip/BERT_Trip_Review/model/bert/bert_model.py", line 483, in forward
    inputs_embeds = self.word_embeddings(input_ids)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/modules/sparse.py", line 190, in forward
    return F.embedding(
  File "/home/yamanishi/.pyenv/versions/miniconda3-latest/envs/berttrip/lib/python3.9/site-packages/torch/nn/functional.py", line 2551, in embedding
    return torch.embedding(weight, input, padding_idx, scale_grad_by_freq, sparse)
RuntimeError: Expected tensor for argument #1 'indices' to have one of the following scalar types: Long, Int; but got torch.cuda.FloatTensor instead (while checking arguments for embedding)
